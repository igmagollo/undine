// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	stdsql "database/sql"
	"fmt"
	"unsafe"
)

func (c *config) Exec(query string, args ...interface{}) (stdsql.Result, error) {
	return c.ExecContext(context.Background(), query, args...)
}
func (c *config) Query(query string, args ...interface{}) (*stdsql.Rows, error) {
	return c.QueryContext(context.Background(), query, args...)
}

func (c *config) QueryRow(query string, args ...interface{}) *stdsql.Row {
	q, ok := c.driver.(interface {
		QueryRow(string, ...any) *stdsql.Row
	})
	if !ok {
		rowErr := &stdsql.Row{}
		p := unsafe.Pointer(&rowErr)
		*(*error)(p) = fmt.Errorf("Driver.QueryRow is not supported")
		return rowErr
	}
	return q.QueryRow(query, args...)
}

func (c *config) QueryRowContext(ctx context.Context, query string, args ...interface{}) *stdsql.Row {
	q, ok := c.driver.(interface {
		QueryRowContext(context.Context, string, ...any) *stdsql.Row
	})
	if !ok {
		rowErr := &stdsql.Row{}
		p := unsafe.Pointer(&rowErr)
		*(*error)(p) = fmt.Errorf("Driver.QueryRowContext is not supported")
		return rowErr
	}
	return q.QueryRowContext(ctx, query, args...)
}
