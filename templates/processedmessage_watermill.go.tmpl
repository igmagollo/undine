{{/* Tell Intellij/GoLand to enable the autocompletion based on the *gen.Graph type. */}}
{{/* gotype: entgo.io/ent/entc/gen.Graph */}}

{{ define "ProcessedmessageWatermill" }}
{{ $pkg := base $.Config.Package }}
{{ template "header" $ }}


import (
	"context"
	"fmt"
	"time"

	"github.com/ThreeDotsLabs/watermill/message"
	"github.com/google/uuid"
)

type ProcessedMessageMarker struct {
	tx    *Tx
	topic string
}

func (p *ProcessedMessageMarker) MarkAsProcessed(ctx context.Context, msg *message.Message) error {
	msgID := msg.UUID
	if msgID == "" {
		return fmt.Errorf("message UUID is empty")
	}

	err := p.tx.ProcessedMessage.Create().
		SetID(uuid.New()).
		SetMessageID(uuid.MustParse(msgID)).
		SetMessageTopic(p.topic).
		SetCreatedAt(time.Now()).
		Exec(ctx)

	if err != nil {
		return fmt.Errorf("creating processed message: %w", err)
	}

	return nil
}

func IsAlreadyProcessedError(err error) bool {
	return IsConstraintError(err)
}


{{ end }}
